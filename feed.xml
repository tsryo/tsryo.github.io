<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.3.2">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2023-05-11T19:14:48+02:00</updated><id>/feed.xml</id><title type="html">Your awesome title</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.</subtitle><entry><title type="html">Welcome to Jekyll!</title><link href="/jekyll/update/2023/05/11/welcome-to-jekyll.html" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2023-05-11T17:53:12+02:00</published><updated>2023-05-11T17:53:12+02:00</updated><id>/jekyll/update/2023/05/11/welcome-to-jekyll</id><content type="html" xml:base="/jekyll/update/2023/05/11/welcome-to-jekyll.html"><![CDATA[<p>You’ll find this post in your <code class="language-plaintext highlighter-rouge">_posts</code> directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run <code class="language-plaintext highlighter-rouge">jekyll serve</code>, which launches a web server and auto-regenerates your site when a file is updated.</p>

<p>Jekyll requires blog post files to be named according to the following format:</p>

<p><code class="language-plaintext highlighter-rouge">YEAR-MONTH-DAY-title.MARKUP</code></p>

<p>Where <code class="language-plaintext highlighter-rouge">YEAR</code> is a four-digit number, <code class="language-plaintext highlighter-rouge">MONTH</code> and <code class="language-plaintext highlighter-rouge">DAY</code> are both two-digit numbers, and <code class="language-plaintext highlighter-rouge">MARKUP</code> is the file extension representing the format used in the file. After that, include the necessary front matter. Take a look at the source for this post to get an idea about how it works.</p>

<p>Jekyll also offers powerful support for code snippets:</p>

<figure class="highlight"><pre><code class="language-ruby" data-lang="ruby"><span class="k">def</span> <span class="nf">print_hi</span><span class="p">(</span><span class="nb">name</span><span class="p">)</span>
  <span class="nb">puts</span> <span class="s2">"Hi, </span><span class="si">#{</span><span class="nb">name</span><span class="si">}</span><span class="s2">"</span>
<span class="k">end</span>
<span class="n">print_hi</span><span class="p">(</span><span class="s1">'Tom'</span><span class="p">)</span>
<span class="c1">#=&gt; prints 'Hi, Tom' to STDOUT.</span></code></pre></figure>

<p>Check out the <a href="https://jekyllrb.com/docs/home">Jekyll docs</a> for more info on how to get the most out of Jekyll. File all bugs/feature requests at <a href="https://github.com/jekyll/jekyll">Jekyll’s GitHub repo</a>. If you have questions, you can ask them on <a href="https://talk.jekyllrb.com/">Jekyll Talk</a>.</p>]]></content><author><name></name></author><category term="jekyll" /><category term="update" /><summary type="html"><![CDATA[You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.]]></summary></entry><entry><title type="html">From Forestry CMS</title><link href="/2022/05/20/from-forestry-cms.html" rel="alternate" type="text/html" title="From Forestry CMS" /><published>2022-05-20T20:30:00+02:00</published><updated>2022-05-20T20:30:00+02:00</updated><id>/2022/05/20/from-forestry-cms</id><content type="html" xml:base="/2022/05/20/from-forestry-cms.html"><![CDATA[<p>So turns out that there <em>is</em> a way to write via the web!</p>

<p>All along I thought the <em>one pain point</em> of having a <code class="language-plaintext highlighter-rouge">GitHub + Jekyll + GitHub Pages</code> blog was the creation of new content had to happen through a desktop, with access to terminal. We have to copy the frontmatter, write the post, and commit the post to git. Not <em>very</em> painful, but a little inconvenient.</p>

<p>So much so that I went looking for other blog systems that had a webeditor in place. Better than not having any editor right? Ideally I would have a mobile app to do this (a man can wish).</p>

<p>The key word I was missing all along was CMS. Content Management System.</p>

<p>Because absolutely none of the places that teach you to set up a static website/blog hosted on GitHub and talk about the ongoing content generation effort! They seem to stop at the one time creation of blog for all they care. Or is it that the expectation of most of the target audience being developers blinds them to some of the papercuts of writing via a text editor (and formatting, and live previewing to see if it looks good…. are they paper cuts still?) because hey, you are already familiar with git, this works.</p>

<blockquote>
  <p><a href="https://news.ycombinator.com/item?id=23312339&amp;p=2#23316450" title="It's possible to use static blogs without touching your site">to be clear, you don’t <em>need</em> to do anything locally. […]</a></p>
</blockquote>

<p>Thanks to <code class="language-plaintext highlighter-rouge">masukomi</code> from Hacker News I am now made aware of <a href="https://forestry.io/" title="It is a CMS">Forestry</a>. It is called a CMS guys. And adding that keyword threw up a bunch of other options as well. But Forestry is a beauty, took me just minutes to setup it up. I am ignoring a couple hours spent debugging an issue with my Jekyll setup that prevented the Forestry systems from building my site for Auto Preview.</p>

<p>Actually better make note of that.</p>

<hr />

<p>If your build (or instant preview server) is failing due to the folowing error:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>ERROR: YOUR SITE COULD NOT BE BUILT:
------------------------------------
Invalid date '&lt;%= Time.now.strftime('%Y-%m-%d %H:%M:%S %z') %&gt;': Document 'vendor/bundle/ruby/2.7.0/gems/jekyll-3.9.2/lib/site_template/_posts/0000-00-00-welcome-to-jekyll.markdown.erb' does not have a valid date in the YAML front matter.
</code></pre></div></div>

<p>Then you probably have not excluded the vendor directory from building. Because it is recommended to have all your gem installs in your local directory (which I wasn’t doing until Forestry) but <a href="https://github.com/jekyll/jekyll/issues/2938#issuecomment-131456094">Jekyll is going to try, and fail, to run negative test cases</a> within itself.</p>

<p>So the solution is to <a href="https://github.com/jekyll/jekyll/issues/2938#issuecomment-56237068">exclude the vendor directory in your config file</a>.</p>

<hr />

<p>Where were we?</p>

<p>Yes, I now have a pretty neat CMS that I can access via web to make blog posts. I used said CMS for writing this blog post and can confirm it is pretty neat.</p>]]></content><author><name></name></author><category term="general" /><summary type="html"><![CDATA[So turns out that there is a way to write via the web!]]></summary></entry><entry><title type="html">You want to build a Recommender System in Prod</title><link href="/2022/05/05/recommender-system-in-prod.html" rel="alternate" type="text/html" title="You want to build a Recommender System in Prod" /><published>2022-05-05T17:51:21+02:00</published><updated>2022-05-05T17:51:21+02:00</updated><id>/2022/05/05/recommender-system-in-prod</id><content type="html" xml:base="/2022/05/05/recommender-system-in-prod.html"><![CDATA[<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>&gt; be you
&gt; have participated in kaggle recommender system competitions
&gt; datascientist.mp3
&gt; bossman says to recommend stuff for noobs
&gt; because they can’t search properly or whatever
&gt; ok bossman
&gt; no defined problem statement? 
&gt; no csv? 
&gt; no accuracy and mae test suite? 
&gt; no leaderboard?

what do /b/?
</code></pre></div></div>

<p><em>Haha, noob. Ok let’s do this.</em></p>

<hr />

<h3 id="-frame-problem-statement">&gt; Frame problem statement</h3>

<p>You are an adult now. Frame the problem statement yourself. Just ask a bunch of questions and keep reducing scope. If you can visualise the mathematical formulation you have arrived. </p>

<p>Congratulations. Wasn’t so hard, was it.</p>

<h3 id="-build-framework">&gt; Build framework</h3>

<p>Setup your Jupyter Notebook so you can iterate fast. Build a first model, maybe a random model that spits out random predictions. Is this a good baseline? Don’t ask such stupid questions, it isn’t. But this will help you build an end to end training and testing pipeline. The train-test split, pre-process placeholders, test suite. </p>

<p>Build now so you don’t need to keep building later. </p>

<h3 id="-establish-baseline">&gt; Establish baseline</h3>

<p>You have the problem statement yeah? There is gotta be some stupid simple stuff that is better than random predictions. Yes, heuristics. Pick one, or some. Get test results. Now this is the one to beat. </p>

<h3 id="-metrics-and-reward-function">&gt; Metrics and reward function</h3>

<p>The very next thing is to establish a good metric of evaluation. Actually this should be the second point of order. But we are here, better late than later I guess.</p>

<p>This is going to be your leaderboard basically. And it should correlate <em>highly</em> with whatever problem statement you are solving for. Take some time here. </p>

<p>At least 2 hours. Minimum.</p>

<h3 id="-simple-algorithms-first">&gt; Simple algorithms first</h3>

<p>Or SAF for short. Heard of Multi Armed Bandits? Try that first. Shit’s amazing. Probably all that you’ll need.</p>

<hr />

<p><em>With me so far?</em> </p>

<p><em>All this was within Jupyter. But predictions happen in the world outside, so we got stuff to do. Strap in. We are going outside.</em></p>

<hr />

<h3 id="-prediction-service-setup">&gt; Prediction Service setup</h3>

<p>How you gonna do the predictions huh? You need an API or some shit. Setup a dummy service that takes in request (a user id maybe) and responds with predictions. </p>

<p>Find something that works with python scripts. Why? Because it is easy to convert a Jupyter Notebook to an executable script but what do I know, write in Cython for all I care. </p>

<p>But code well. Classes and shit. You are in production environment now. Act like it.</p>

<h3 id="-feature-store-low-latency-cache">&gt; Feature store (low latency cache)</h3>

<p>A lot of concurrent requests (QPS) and low latency requests means optimisations. Use caches and feature stores to save model weights and intermediate products. CosmosDB, Aerospike, just pick one and run with it. You know how dictionary look-ups are very fast? Same concept. Prefer lookups to on-demand processing.</p>

<p>Keep the actual prediction service is as light as possible. Maybe it just does a dot product of vectors. Maybe you found out about ONNX runtimes and used that. </p>

<p>Good job!</p>

<h3 id="-logs-health-metrics-and-alerting">&gt; Logs, health metrics and alerting</h3>

<p>Stuff breaks. Production stuff breaks hard. You need to know when it breaks. Log stuff. Model health, pre-processing data health, maybe every request and response (RRLogs). Actually, definitely do that. ELK, Kibana, or some such crap. Then setup alerts on it. So when a bunch of predictions are throwing NULLs you will be on top of it in 1 hour rather than the product folks telling you about it after 3 days.</p>

<p>While you are at it also set up some alerting on the infrastructure. Running at 95% memory capacity or 5% CPU capacity, both are bad. Or your Celery queue is choked to the end of times. Bad.</p>

<p>Keep your eyes on those numbers. Better, push those numbers (Prometheus) to a dashboard (Grafana) and set up alerts (PagerDuty). </p>

<p>Rest those eyes until needed.</p>

<h3 id="-performance-metrics">&gt; Performance metrics</h3>

<p>Fancy graphs that product people see to judge how good your recommender system is working. Should contain your model performance metrics and related product metrics (Retention, Engagement, Churn, what have you). Dunno what to use? Use Metabase. If someone asks why just say I told you to.</p>

<p>If you build this to be sufficiently standalone so all your future models can plug into it, well done, you are a good engineer.</p>

<h3 id="-model-re-training-and-pipelines">&gt; Model re-training and pipelines</h3>

<p>Models get stale. Underlying data may no longer be relevant. You gotta re-train your models. Automate that shit. </p>

<p>Airflow will let you schedule tasks and dependencies in what it calls DAGs. Which are just Graphs which have a particular Direction and are Acyclic. Use them. It is fancy cron and you can do some fancy cron stuff with it.</p>

<hr />

<p><em>Congratulations. Your recommender system is now in production.</em> </p>

<p><em>Soon “people” will come to you with suggestions and ideas on how to make recommendations better. They will say it is a small change, let us see how it performs.</em></p>

<p><em>Now you are thinking about an experimentation framework. Hypothesis testing. Model Controller.</em></p>

<p><em>Until then…</em></p>]]></content><author><name></name></author><category term="general" /><summary type="html"><![CDATA[``` be you have participated in kaggle recommender system competitions datascientist.mp3 bossman says to recommend stuff for noobs because they can’t search properly or whatever ok bossman no defined problem statement? no csv? no accuracy and mae test suite? no leaderboard?]]></summary></entry><entry><title type="html">Vector Logos</title><link href="/2021/06/01/vector-logos.html" rel="alternate" type="text/html" title="Vector Logos" /><published>2021-06-01T17:51:21+02:00</published><updated>2021-06-01T17:51:21+02:00</updated><id>/2021/06/01/vector-logos</id><content type="html" xml:base="/2021/06/01/vector-logos.html"><![CDATA[<p>Some vector logos I have created, in various styles. I use the first one personally, and you may have seen some of the others in the wild.</p>

<p>I use <a href="https://inkscape.org">InkScape</a> to make these, and it typically takes a couple hours. <a href="https://www.youtube.com/channel/UCEQXp_fcqwPcqrzNtWJ1w9w">Logos By Nick</a> is an awesome channel if you ever want to do these kind of stuff yourself.</p>

<style>
    .image-gallery {overflow: auto; margin-left: -1%!important;}
    .image-gallery li {float: left; display: block; margin: 0 0 1% 1%; width: 250px;}
    .image-gallery li a {text-align: center; text-decoration: none!important; color: #777;}
    .image-gallery li a span {display: block; text-overflow: ellipsis; overflow: hidden; white-space: nowrap; padding: 3px 0;}
    .image-gallery li a img {width: 100%; display: block;}
</style>

<ul class="image-gallery">
    
    
    
    
    
    <li>
        <a href="/assets/design_assets/Logo_01.png" title="Logo_01">
            <img src="/assets/design_assets/Logo_01.png" alt="Logo_01" class="figure" title="Logo_01" />
        </a>
    </li>
    
    
    
    
    
    
    
    <li>
        <a href="/assets/design_assets/Logo_02.png" title="Logo_02">
            <img src="/assets/design_assets/Logo_02.png" alt="Logo_02" class="figure" title="Logo_02" />
        </a>
    </li>
    
    
    
    
    
    
    
    <li>
        <a href="/assets/design_assets/Logo_03.png" title="Logo_03">
            <img src="/assets/design_assets/Logo_03.png" alt="Logo_03" class="figure" title="Logo_03" />
        </a>
    </li>
    
    
    
    
    
    
    
    <li>
        <a href="/assets/design_assets/Logo_04.png" title="Logo_04">
            <img src="/assets/design_assets/Logo_04.png" alt="Logo_04" class="figure" title="Logo_04" />
        </a>
    </li>
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
</ul>]]></content><author><name></name></author><category term="design" /><summary type="html"><![CDATA[Some vector logos I have created, in various styles. I use the first one personally, and you may have seen some of the others in the wild.]]></summary></entry><entry><title type="html">A Short Affair</title><link href="/2020/10/01/a-short-affair.html" rel="alternate" type="text/html" title="A Short Affair" /><published>2020-10-01T20:50:21+02:00</published><updated>2020-10-01T20:50:21+02:00</updated><id>/2020/10/01/a-short-affair</id><content type="html" xml:base="/2020/10/01/a-short-affair.html"><![CDATA[<p>Look at that guy, he walking along<br />
Wearing shorts, just strutting along<br />
It’s Bermudas! he shouts, in sing song<br />
It’s shorts.</p>

<p>Halt, says the cop, You can’t do that!<br />
Wearing shorts is very very bad<br />
But it’s Bermuda’s, and it’s rad!<br />
It’s shorts.</p>

<p>The guy’s stringed up to a tree<br />
As his punishment and mortal fee<br />
‘Cos it’s illegal to sport them wee<br />
Little shorts.</p>

<p>Cop catches walkers, old men and wives<br />
Hanging them, in front of his eyes<br />
Stop doing that! Killing them like mice!<br />
Oh… these… shorts…!</p>

<p>Watch them die; it is on you!<br />
Please stop, what do I do?<br />
Let me strip, let me remove<br />
Them shorts!</p>

<p>Oh no you don’t, there are kids playing!<br />
You pervert, what are you saying?<br />
Look at them bowl, look at them batting…<br />
What a shot!</p>

<p>Grab those kids, line them up<br />
One by one, hang them up<br />
The guy starts wailing, I GIVE UP!<br />
He’s shot.</p>]]></content><author><name></name></author><category term="poem" /><summary type="html"><![CDATA[Look at that guy, he walking along Wearing shorts, just strutting along It’s Bermudas! he shouts, in sing song It’s shorts.]]></summary></entry><entry><title type="html">Bored</title><link href="/2020/08/23/bored.html" rel="alternate" type="text/html" title="Bored" /><published>2020-08-23T17:51:21+02:00</published><updated>2020-08-23T17:51:21+02:00</updated><id>/2020/08/23/bored</id><content type="html" xml:base="/2020/08/23/bored.html"><![CDATA[<p>The air was slightly breezy, a noisy fan moving it about rather unsuccessfully in the other room. A constant buzz of the crickets in the night was interrtupted by dog howls. She lay in bed, eyes closed, observing all the sounds. Noticing. Remembering.</p>

<blockquote>
  <p>“Just as you first saw it. ”</p>
</blockquote>

<p>She opened her eyes, satisfied. She sat up and looked at the curtains, silk sheets waving about in the gentle breeze of the open window. They were still before, she remembered. No worries, they will be still again.</p>

<p>She stood up, and pulled out a wet wipe. Again closing her eyes she replayed everything that had happened. Objects she touched, places she stood in. She went backwards, retracing her steps, working methodically.</p>

<blockquote>
  <p>“No signs. Nothing amiss.”</p>
</blockquote>

<p>She was never there. As she stepped out of the window she looked at Nisha on the bed, as though sleeping. Tomorrow morning the maid will ring the bell at 0600, and again at 0603. Nisha will not open the door. The milkman would leave the milk by her doorstep at 0700, as he does. Tomorrow morning Nisha will not go to office. She will get two messages around noon from her boss asking about the code review, which she won’t reply to. Tomorrow evening she will get a voicemail from her mother, wondering why Nisha didn’t call her that morning. By tomorrow night she would have 7 missed calls and 12 unresponded messages.</p>

<p>By the time she’s found that would only go up to 13 calls and 17 messages.</p>

<p>She closed the window gently, and watched the curtains grow still. Outside the air was chilly, and a dog howl chorus had just started. She slipped her hand into her pocket and found the lock of hair. As she rolled it around her fingers she took a deep breath of the clean sharp air.</p>

<blockquote>
  <p>And she realised she still felt empty and bored.</p>
</blockquote>]]></content><author><name></name></author><category term="fiction" /><summary type="html"><![CDATA[The air was slightly breezy, a noisy fan moving it about rather unsuccessfully in the other room. A constant buzz of the crickets in the night was interrtupted by dog howls. She lay in bed, eyes closed, observing all the sounds. Noticing. Remembering.]]></summary></entry></feed>